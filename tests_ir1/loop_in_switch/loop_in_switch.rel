version 1.0.0;
field characteristic 65327 degree 1;
relation
gate_set:arithmetic;
features:@for,@function,@switch;
@begin

@function(sum, @out: 1, @in: 4, @instance: 0, @short_witness: 0)
  // out: $0
  // in: $1 ... $4
  $5 <- @add($1, $2);
  $6 ... $6 <- @for i @first 2 @last 2
    $(i + 4) <- @anon_call($(1 + i), $(3 + i), @instance: 0, @short_witness: 0)
      $0 <- @add($1, $2);
    @end
  @end
  // $6 <- @add($5, $3);
  $0 <- @add($4, $6);
@end

// M (4x4): $0...$15 (instance)
// --N (4x4): $32...$47 (witness)
// C (4x4): $16...$31 (witness)
// C' (4x4): $48...$63

// Computes the product C':=M*N, and checks that C'==C

$0 ... $15 <- @for i @first 0 @last 15
  $i <- @anon_call(@instance: 1, @short_witness: 0)
    $0 <- @instance;
  @end
@end

$32 <- @short_witness;

$48 ... $63 <- @switch($32)
  @case<0>: @anon_call($0...$15, @instance: 0, @short_witness: 16)
    // C' (4x4): $0...$15
    // M (4x4): $16...$31
    // N (4x4): $32...$47
    $32 ... $47 <- @for i @first 32 @last 47
      $i <- @anon_call(@instance: 0, @short_witness: 1)
        $0 <- @short_witness;
      @end
    @end

    $0 ... $15 <- @for i @first  0 @last 3
      $(i * 4) ... $(3 + (i * 4)) <- @anon_call($16 ... $31, $32 ... $47, @instance: 0, @short_witness: 0)
        // C'[i][...]: $0 ... $3
        // M: $4 ... $19
        // N: $20 ... $35
        $0 ... $3 <- @for j @first 0 @last 3
          $j <- @anon_call($4 ... $19, $20... $35, @instance: 0, @short_witness: 0)
            // C'[i][j]: $0
            // M: $1 ... $16
            // N: $17 ... $32
            $33 ... $36 <- @for k @first 0 @last 3
              $(k + 33) <- @anon_call($(1 + ((i * 4) + k)), $(17 + ((k * 4) + j)), @instance: 0,@short_witness: 0)
                $0 <- @mul($1, $2);
              @end
            @end
            $0 <- @call(sum, $33 ... $36);
          @end
        @end
      @end
    @end
  @end
  @case<1>: @anon_call(@instance: 0, @short_witness: 0)
    $0 <- <0>;
    $1 <- <0>;
    $2 <- <0>;
    $3 <- <0>;
    $4 <- <0>;
    $5 <- <0>;
    $6 <- <0>;
    $7 <- <0>;
    $8 <- <0>;
    $9 <- <0>;
    $10 <- <0>;
    $11 <- <0>;
    $12 <- <0>;
    $13 <- <0>;
    $14 <- <0>;
    $15 <- <0>;
  @end
@end

$16 ... $31 <- @for i @first 16 @last 31
  $i <- @anon_call(@instance: 0, @short_witness: 1)
    $0 <- @short_witness;
  @end
@end

// Check that C' == C
@for i @first 0 @last 3
  @anon_call($((i * 4) + 16) ...$((i * 4) + 19), $((i * 4) + 48) ... $((i * 4) + 51), @instance: 0, @short_witness: 0)
    // C[i][...]: $0 ... $3
    // C'[i][...]: $4 ... $7
    @for j @first 0 @last 3
      @anon_call($j, $(j + 4), @instance: 0, @short_witness: 0)
        $2 <- @mulc($0, < 65326 >);
        $3 <- @add($1, $2);
        @assert_zero($3);
      @end
    @end
  @end
@end

@end
